@model CentACS.Admin.Models.TemplateFieldIndexViewModel
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container-fluid">
    <div class="row">
        <div class="page-header">
            <h2><strong>Workplace 360</strong> <span class="text-primary">Language Capacitor High Performance</span></h2>
        </div>
    </div>

    <div class="row">
        <select id="_destination">
            
        </select>
    </div>

    <div class="row">
        <div class="container">
            <div class="col-md-12">
                <ul class="list-group-item">
                    @foreach (var field in Model.Fields)
                    {
                        <li class="list-group-item">
                            <div class="container">
                                <div class="row">
                                    <div class="col-sm-4">
                                        <span class="text-primary">@field.Name</span>
                                    </div>
                                    <div class="col-sm-4">
                                        <span class="text-info">@field.BaseValue</span>
                                    </div>
                                    <div class="col-sm-4">
                                        <span class="text-warning">@field.TranslatedValue</span>
                                    </div>
                                </div>
                            </div>
                        </li>
                    }
                </ul>
            </div>
        </div>
    </div>

    <div class="row">
        @Json.Encode(Model)
    </div>
</div>

<script type="text/javascript">

    var SPA = function (data) {

        var spa = {};
        spa = data;

        spa.LoadView = function () {

            $('#_destination').clear();
            $.each(data.Languages, function (idx, val) {

                $('#_destination')
                    .append($("<option></option>")
                    .attr("value", data.Languages[idx].LanguageKey)
                    .text(data.Languages[idx].Name));

            });


            spa.BindEvents();
        };

        spa.BindEvents = function () {

        };

        spa.GetLanguageEntries = function (key) {
            $.each(data.Fields, function (idx, val) {
                if (data.Fields[idx].LanguageKey == key) {
                    return data.Fields[idx];
                }
            });
        }

        return spa;
    };

    var data = {};
    data = @Html.Raw(Json.Encode(Model));

    var pageMgr = new SPA(data);
    pageMgr.LoadView();

</script>